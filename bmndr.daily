#!/usr/bin/env perl

# USAGE:   bmndr.daily
#          Lists and/or toggles today's daily tasks
#          Depends on lydgate's bmndr script and its configuration
#
# AUTHOR:  Philip Hellyer, www.hellyer.net
# URL:     https://github.com/pjjh/bmndr
# FILE:    bmndr.top
# LICENSE: Creative Commons BY-NC-SA
#          http://creativecommons.org/licenses/by-nc-sa/4.0/
#          Copyright 2015 Philip Hellyer

our $beemuser;
require "${path}beemapi.pl";

use warnings;
use strict;
use POSIX qw(strftime);

# CONFIG

# TODO move to a config file
my $goal = 'dailies';

# END CONFIG

if ( defined $ARGV[0] and $ARGV[0] eq '--help' ) {
  $0 =~ /([^\/]+)$/;
  print "Usage: $1 [substring] [substring]\n";
  print "\t display today's entries in the $goal goal\n";
  print "\t toggle values matching any substring provided\n";
  exit 0;
}

# daystamp '20151225' is christmas 2015
my $todaystamp = strftime '%Y%m%d', localtime;


# were we run already today? SNIPPET
#system( "/usr/bin/touch -t ${todaystamp}0000 today" );
#my $firstrun = system( "/bin/test bmndr.daily.lastrun -nt today" );
#system( "/usr/bin/touch bmndr.daily.lastrun" );

# fetch the most recent day's dailies
print "fetching dailies...\n";
my @datapoints = ();
my $latestday = '20111012';
@datapoints = 
    sort { $a->{'comment'} cmp $b->{'comment'} }
    grep { $_->{'daystamp'} eq $latestday }
    grep { $_->{'daystamp'} ge $latestday and $latestday = $_->{'daystamp'} }
    @{ beemfetch( $goal ) };

# copy to today, if needed
if ( $latestday lt $todaystamp ) {
  print "creating dailies...\n";
  for my $d ( @datapoints ) {
    $d->{value} = 0;
    $d->{id} = beemcreate( $beemuser, $goal, time, 0, $d->{'comment'} );
  }
}

# build a regexp to match command line args
our $args = undef;
if ( scalar @ARGV ) {
  $args = join '|', @ARGV;
}

for my $d ( @datapoints ) {
  # show the current state
  print $d->{'value'}, ' ', $d->{'comment'}, "\n";

  # toggle the value if specified on the command line
  if ( $args and $d->{'comment'} =~ /$args/io ) {
    $d->{'value'} = ( $d->{'value'} + 1 ) % 2, # 0=>1, 1=>0
    beemupdate( 
      $beemuser, 
      $goal, 
      $d->{'id'},
      time,
      $d->{'value'},
      $d->{'comment'},
    );
    print "> toggled to $d->{'value'}\n"
  }
}





