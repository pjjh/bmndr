#!/usr/bin/env perl

# USAGE:   bmndr.top
#          Prints the subset of beeminder goals that are closest to derailing
#          Depends on lydgate's bmndr script
#
# AUTHOR:  Philip Hellyer, www.hellyer.net
# URL:     https://github.com/pjjh/bmndr
# FILE:    bmndr.top
# LICENSE: Creative Commons BY-NC-SA
#          http://creativecommons.org/licenses/by-nc-sa/4.0/
#          Copyright 2015 Philip Hellyer

use warnings;
use strict;

# CONFIG
my $BMNDR = ''; # e.g. /Users/philip/Documents/src/bmndr/bmndr
die "FIXME: Configure bmndr.top with the path to your bmndr script\n" unless $BMNDR;
# TODO move this into beemapi.pl and bmndrrc

my $top = undef;
my $count = 0;
my @goals = ();

for my $bmndr (split /\n/, `$BMNDR`) {
  $bmndr =~ /(\d+) days?/ or warn "Bad line: $bmndr\n" and next;
  $top = $1 unless defined $top;
  print "$bmndr\n" and $count++ if ( $top == $1 );
}

#for my $bmndr (split /\n/, `~/bin/bmndr`) {
#  $bmndr =~ /^(\w+)\s* (\d+) days?/;
#  warn "Bad line: $bmndr\n" unless defined $2;
#  $top = $2 unless defined $top;
#  push( @goals, $1) and $count++ if ( $top == $2 );
#}
print "Count: $count\n";

#for my $goal (@goals) {
#  my $bmndr = grep {/^Bare minimum/} split( /\n/, `~/bin/bmndr $goal`);
#  print $goal, $bmndr;
#}

# TODO for goals above, cycle through printing s/Bare minimum/$goal/ if /^Bare minimum/
# Though that turns one api call into N+1 calls for the relevant subset N

