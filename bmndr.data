#!/usr/bin/env perl

use warnings;
use strict;
require './beemapi.pl';
use Data::Dumper;

if ( not defined $ARGV[0] or $ARGV[0] eq '--help' ) {
  $0 =~ /([^\/]+)$/;
  print "Usage: $1 goalname [threshold]\n";
  print "\t threshold => don't display values less than X\n";
  exit 0;
}

my ( $goal, $threshold ) = @ARGV;

$threshold ||= -1000000;


for my $datapoint ( @{ beemfetch( $goal ) } ) {
  my $comment  = $datapoint->{comment};
  my $daystamp = $datapoint->{daystamp};
  my $value    = $datapoint->{value};

  next if $comment =~ '\b(reset|initial)\b' ;
  next if $value < $threshold;

  $daystamp =~ /^(\d{4})(\d{2})(\d{2})$/ or die "unexpected daystamp $daystamp\n";
  
  print "$1/$2/$3, $value, \"$comment\"\n";
}

# interesting use case: what's the average reported ABV?
# bmndr.data units | grep wine | grep -v -E 'wine.*wine' | awk -F, '{print $4}' | perl -ne '$avg = ( $n * $avg + $_ ) / ($n+1); $n++; END { print "avg=$avg\n" }'
# wine => 12.75
# beer => 4.3
# avg=12.75

